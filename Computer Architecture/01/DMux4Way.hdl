// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    //DMux4Way has a 4 bit output along with a 3 bit input (an input value and a 2 bit sel)

    //TESTING PURPOSES *******
    // sel = 01, in = 1
    // dmux 1, 1 -> {0,1} a=0, b=1
    // dmux 0, 0 -> {0,0}
    //dmux 1, 0 -> {1,0}
    //reverts to {0,1,0,0}
    //TESTING PURPOSES *******

    PARTS:
    //First checking the second bit of sel, we can use the same Dmux function previously made
    //to get an out a and b value. These can be used in two more DMux's to get the 4 output values while
    //checking the first bit of the sel value.

    DMux(in=in, sel=sel[1], a=outA, b=outB);

    //The next 2 DMux's basically go down the line of values (think about the sel values
    // changing from 0 to 1, 2, 3) and set the a and b accordingly for all 4 values
    
    DMux(in=outA,sel=sel[0], a=a, b=b);
    DMux(in=outB, sel=sel[0], a=c, b=d);
}