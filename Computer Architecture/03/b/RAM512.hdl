// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:

    // While I already realized the hierarchial scheme of these increasing RAM chips, and the same math
    // of RAM512 / RAM64 = 8, the textbook also states this on page 92.
    // "This hierarchical addressing scheme can be effected by gate logic. The same implementation idea
    // can guide the implementation of the remaining RAM512, RAM4K, and RAM16K chips."
    // Since the same math applies, we can keep our same structure and same Dmux and Mux chips from project 01.

    // Just like the RAM8 and RAM64, select the data from load and address inputs 
    // so that its compatible to be loaded into memory.
    //DMux8Way takes in 3 bit sel.
    DMux8Way(in=load, sel=address[6..8], a=d1,b=d2,c=d3,d=d4,e=d5,f=d6,g=d7,h=d8);

    // Upload our 8 DMuxed values into our memory.
    // Address in our RAM64 file takes in 6 bits. 
    //512/64 = 8, so 8 RAM64 chips
    
    RAM64(in=in,load=d1, address=address[0..5], out=r1);
    RAM64(in=in,load=d2, address=address[0..5], out=r2);
    RAM64(in=in,load=d3, address=address[0..5], out=r3);
    RAM64(in=in,load=d4, address=address[0..5], out=r4);
    RAM64(in=in,load=d5, address=address[0..5], out=r5);
    RAM64(in=in,load=d6, address=address[0..5], out=r6);
    RAM64(in=in,load=d7, address=address[0..5], out=r7);
    RAM64(in=in,load=d8, address=address[0..5], out=r8);

    // Outputs from RAM64
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address[6..8], out=out);
}